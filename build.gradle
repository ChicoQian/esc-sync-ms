/*
 * Copyright 2014 EMC Corporation. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 * http://www.apache.org/licenses/LICENSE-2.0.txt
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
group = 'com.emc.vipr'
version = '1.3.6'

ext.mainClass = 'com.emc.vipr.sync.ViPRSync'

defaultTasks 'distZip'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.0.3'
    }
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'distribution'
apply plugin: 'idea'
apply plugin: 'eclipse'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile files('lib/fplibrary-3.3.718.jar'),
            "log4j:log4j:1.2.16",
            "commons-cli:commons-cli:1.2",
            "com.google.code.gson:gson:2.0",
            "com.emc.ecs:atmos-client:2.2.2.1",
            "mysql:mysql-connector-java:5.1.31",
            "org.springframework:spring-jdbc:3.2.6.RELEASE",
            "org.springframework:spring-context:3.2.6.RELEASE",
            "commons-dbcp:commons-dbcp:1.4",
            "com.amazonaws:aws-java-sdk:1.7.5",
            "net.java.truevfs:truevfs-profile-default:0.10.6",
            "org.slf4j:slf4j-log4j12:1.7.5",
            "com.emc.ecs:object-client:2.0.2-dev.2.uncommitted+b277edd"
    testCompile "junit:junit:4.11",
            "org.hsqldb:hsqldb:2.3.2"
}

compileJava {
    sourceCompatibility = 1.6
    targetCompatibility = 1.6
    if (project.hasProperty('java6Lib')) {
        options.fork = true
        options.bootClasspath = new File(java6Lib).listFiles(
                [accept:{d, f-> f ==~ /.*\.jar/ }] as FilenameFilter
        ).join(File.pathSeparator)
    }
}

javadoc {
    options.quiet()
}

shadowJar {
    classifier ''
    mergeServiceFiles()
    append('META-INF/spring.handlers')
    append('META-INF/spring.schemas')
    appendManifest {
        attributes 'Main-Class': mainClass,
                'Implementation-Version': project.version,
                'Class-Path': configurations.runtime.collect { it.getName() }.join(' ')
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from "${docsDir}/javadoc"
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

distributions {
    main {
        contents {
            from 'readme.txt'
            from 'license.txt'
            from shadowJar
            from 'script'
            into('sample') {
                from 'sample'
            }
            into('doc') {
                from javadocJar
            }
            into('src') {
                from sourcesJar
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}
